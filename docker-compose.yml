version: '3'

services:
  scanner:
    image: sbs20/scanservjs
    container_name: sane-scanner-service
    restart: unless-stopped
    # Forwards the installation of the host scanners to the container, check the content of /etc/sane.d/saned.conf in host machine
    # It's important to add the docker networks
    # 192.168.1.0/24
    # 172.17.0.0/16
    # 172.16.0.0/12
    environment:
      - SANED_NET_HOSTS=${HOST_IP:-192.168.1.64} # This is the real ip of the host containing the scanner
    ports:
      - "8080:8080"
    devices:
      - /dev/brother-dcp-t310
    volumes:
      # - /var/run/dbus:/var/run/dbus
      # - /local/path/cfg:/app/config
      - ${SHARED_DISK_MOUNT_POINT?You must specify the shared disk path}/Pictures/Scan:/app/data/output
    # privileged: true

  samba:
    image: servercontainers/samba
    container_name: samba-service
    restart: unless-stopped
    network_mode: host # !important to help Windows discover the sambas
    # uncomment to solve bug: https://github.com/ServerContainers/samba/issues/50 - wsdd2 only - not needed for samba
    cap_add:
      - CAP_NET_ADMIN
    environment:
      MODEL: TimeCapsule
      AVAHI_NAME: StorageServer
      SAMBA_CONF_LOG_LEVEL: 3
      # uncomment to disable optional services
      #WSDD2_DISABLE: 1
      #AVAHI_DISABLE: 1
      GROUP_admin: 1500
      GROUP_family: 1501
      
      ACCOUNT_miguel: migue300995
      UID_miguel: 1000
      GROUPS_miguel: admin
 
      ACCOUNT_joseluis: foco030363
      UID_joseluis: 1001
      GROUPS_joseluis: family
      
      # Examples using environment variables instead of volume config
      # SAMBA_VOLUME_CONFIG_shared_home: "[Home]; path=/shares/homes/%U; valid users = alice, bob, foo; guest ok = no; read only = no; browseable = yes"
      # SAMBA_VOLUME_CONFIG_aliceonly: "[Alice Share]; path=/shares/alice; valid users = alice; guest ok = no; read only = no; browseable = yes"
      # SAMBA_VOLUME_CONFIG_alicehidden: "[Alice Hidden Share]; path=/shares/alice-hidden; valid users = alice; guest ok = no; read only = no; browseable = no"      
      # SAMBA_VOLUME_CONFIG_public: "[Public]; path=/shares/public; valid users = alice, bob, foo; guest ok = no; read only = no; browseable = yes; force group = family"
      # SAMBA_VOLUME_CONFIG_public_ro: "[Public ReadOnly]; path=/shares/public; guest ok = yes; read only = yes; browseable = yes; force group = family"
      # SAMBA_VOLUME_CONFIG_timemachine: "[TimeMachine]; path=/shares/timemachine/%U; valid users = alice, bob, foo; guest ok = no; read only = no; browseable = yes; fruit:time machine = yes; fruit:time machine max size = 500G"
      # SAMBA_VOLUME_CONFIG_miguel: "[MiguelShare]; path=/shares/miguel; writeable = yes; valid users = miguel; guest ok = no; read only = no; browseable = yes; read raw = Yes; write raw = Yes; use sendfile = true"
    volumes:
      # - /etc/avahi/services/:/external/avahi
      # avoid loops when mounting folders to /shares (I'd recommend explicit mapping for each share)
      - ${SHARED_DISK_MOUNT_POINT?You must specify the shared disk path}:/shares/miguel
      - ${SHARED_DISK_MOUNT_POINT?You must specify the shared disk path}/Users/Father:/shares/joseluis
      - ./Configurations/smb.conf:/etc/samba/smb.conf:ro
      # - ./shares/alice-hidden:/shares/alice-hidden
      # - ./shares/bob:/shares/bob

  dlna:
    image: geekduck/minidlna
    container_name: dlna-service
    restart: unless-stopped
    network_mode: host # !important to help Windows discover dlna
    # ports:
    # - "1900:1900/udp"
    # - "8200:8200/tcp"
    volumes:
      # - <PATH_TO_MUSIC_DIR>:/opt/Music
      - ${SHARED_DISK_MOUNT_POINT?You must specify the shared disk path}/Movies:/opt/Videos/Movies
      - ${SHARED_DISK_MOUNT_POINT?You must specify the shared disk path}/Series:/opt/Videos/Series
      - ${SHARED_DISK_MOUNT_POINT?You must specify the shared disk path}/Pictures:/opt/Pictures
      - ./Configurations/minidlna.conf:/etc/minidlna.conf
    restart: unless-stopped
  
  # if I delete a file inside a container, delete that container and relaunch the container of the image the change is permanent (I don't know why) even if i change the container name (with ydkn/cups) (forget this, it was because the volume of the container saved all /etc/cups directory)
  cups:
    image: miguel/cups
    container_name: cups-service
    restart: unless-stopped
    ports:
     - "631:631"
    devices:
      - /dev/brother-dcp-t310
      - /dev/brother-hl-1110
    device_cgroup_rules:
    - 'c 189:* rmw' # 189 is the major number for usb devices (Printers)
    volumes:
      - /dev/bus/usb:/dev/bus/usb
      - /var/run/dbus:/var/run/dbus
      # Check the order of the volumes
      - ./.ContainersData/Cups:/etc/cups
      - ./Configurations/cupsd.conf:/etc/cups/cupsd.conf 
    # privileged: true
    restart: unless-stopped

  nginx:
    image: nginx
    container_name: nginx-service
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      - NGINX_HOST=lopezarcos.io
      - NGINX_PORT=80
    volumes:
      - ./Configurations/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer-service
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./.ContainersData/Portainer:/data # Keep portainer config such as the user and host configured
    ports:
      - 9000:9000
  
  pyload-ng:
    image: linuxserver/pyload-ng
    container_name: pyload-service
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Mexico_City
    volumes:
      - ./.ContainersData/Pyload:/config
      - ${SHARED_DISK_MOUNT_POINT?You must specify the shared disk path}/Pyload/Downloads:/downloads
    ports:
      - 3000:8000
